2025-08-07 14:43:38,911 - INFO - Loading page-wise features from readability_training_pagewise/embeddings/efficientnet_pagewise_embeddings_20250806_181332
2025-08-07 14:43:38,926 - INFO - ✅ Page-wise features loaded successfully
2025-08-07 14:43:38,927 - INFO - 📊 Train features: (476, 1280)
2025-08-07 14:43:38,927 - INFO - 📊 Test features: (122, 1280)
2025-08-07 14:43:38,927 - INFO - 📊 Feature dimension: 1280
2025-08-07 14:43:38,927 - INFO - 📊 Classification type: page_wise
2025-08-07 14:43:38,927 - INFO - ✅ Feature-to-image mapping verified
2025-08-07 14:43:38,928 - INFO - 🚀 Starting XGBoost training for PAGE-WISE readability classification...
2025-08-07 14:43:38,928 - INFO - 🔧 MEDIUM hyperparameter tuning for PAGE-WISE classification...
2025-08-07 14:43:38,928 - INFO - 📊 Total parameter combinations: 16
2025-08-07 14:43:38,928 - INFO - 🔄 Cross-validation folds: 3
2025-08-07 14:43:38,929 - INFO - ⏱️  Estimated time: 8.0 - 24.0 minutes
2025-08-07 14:43:38,929 - INFO - 🚀 Starting hyperparameter search...
2025-08-07 14:45:32,450 - INFO - ✅ Hyperparameter search completed!
2025-08-07 14:45:32,451 - INFO - ⏱️  Total training time: 0:01:53.520820
2025-08-07 14:45:32,451 - INFO - 🏆 Best parameters found:
2025-08-07 14:45:32,452 - INFO -    colsample_bytree: 0.8
2025-08-07 14:45:32,452 - INFO -    learning_rate: 0.1
2025-08-07 14:45:32,453 - INFO -    max_depth: 3
2025-08-07 14:45:32,453 - INFO -    n_estimators: 100
2025-08-07 14:45:32,454 - INFO -    reg_alpha: 0
2025-08-07 14:45:32,454 - INFO -    reg_lambda: 1
2025-08-07 14:45:32,454 - INFO -    subsample: 0.8
2025-08-07 14:45:32,455 - INFO - 🏆 Best CV F1 score: 0.7960
2025-08-07 14:45:32,464 - INFO - 🔝 Top parameter combinations:
2025-08-07 14:45:32,465 - INFO -    1. F1: 0.7960 (±0.0392) - {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 100, 'reg_alpha': 0, 'reg_lambda': 1, 'subsample': 0.8}
2025-08-07 14:45:32,465 - INFO -    2. F1: 0.7933 (±0.0351) - {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 6, 'n_estimators': 100, 'reg_alpha': 0, 'reg_lambda': 1, 'subsample': 0.8}
2025-08-07 14:45:32,466 - INFO -    3. F1: 0.7892 (±0.0360) - {'colsample_bytree': 0.8, 'learning_rate': 0.2, 'max_depth': 6, 'n_estimators': 100, 'reg_alpha': 0, 'reg_lambda': 1, 'subsample': 1.0}
2025-08-07 14:45:32,466 - INFO -    4. F1: 0.7883 (±0.0381) - {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 100, 'reg_alpha': 0, 'reg_lambda': 1, 'subsample': 1.0}
2025-08-07 14:45:32,466 - INFO -    5. F1: 0.7866 (±0.0371) - {'colsample_bytree': 0.8, 'learning_rate': 0.1, 'max_depth': 6, 'n_estimators': 200, 'reg_alpha': 0, 'reg_lambda': 1, 'subsample': 0.8}
2025-08-07 14:45:32,466 - INFO - 📊 Evaluating best model on training and test sets...
2025-08-07 14:45:32,467 - INFO - 🔍 Evaluating on train set (476 samples)...
2025-08-07 14:45:32,493 - INFO - 📊 TRAIN RESULTS:
2025-08-07 14:45:32,493 - INFO -    📈 Accuracy:  0.9979
2025-08-07 14:45:32,494 - INFO -    📈 Precision: 0.9969
2025-08-07 14:45:32,494 - INFO -    📈 Recall:    1.0000
2025-08-07 14:45:32,494 - INFO -    📈 F1 Score:  0.9985
2025-08-07 14:45:32,494 - INFO -    📈 ROC AUC:   1.0000
2025-08-07 14:45:32,494 - INFO -    📊 True distribution: {np.float32(0.0): np.int64(152), np.float32(1.0): np.int64(324)}
2025-08-07 14:45:32,494 - INFO -    📊 Pred distribution: {np.int64(0): np.int64(151), np.int64(1): np.int64(325)}
2025-08-07 14:45:32,495 - INFO - 🔍 Evaluating on test set (122 samples)...
2025-08-07 14:45:32,517 - INFO - 📊 TEST RESULTS:
2025-08-07 14:45:32,517 - INFO -    📈 Accuracy:  0.7459
2025-08-07 14:45:32,517 - INFO -    📈 Precision: 0.7500
2025-08-07 14:45:32,517 - INFO -    📈 Recall:    0.9259
2025-08-07 14:45:32,518 - INFO -    📈 F1 Score:  0.8287
2025-08-07 14:45:32,518 - INFO -    📈 ROC AUC:   0.7757
2025-08-07 14:45:32,518 - INFO -    📊 True distribution: {np.float32(0.0): np.int64(41), np.float32(1.0): np.int64(81)}
2025-08-07 14:45:32,518 - INFO -    📊 Pred distribution: {np.int64(0): np.int64(22), np.int64(1): np.int64(100)}
2025-08-07 14:45:32,532 - INFO - 📄 Performance metrics saved to: readability_training_pagewise/experiments/xgboost_efficientnet_20250807_144338/performance_metrics.txt
2025-08-07 14:45:32,533 - INFO - 💾 Model saved to: readability_training_pagewise/experiments/xgboost_efficientnet_20250807_144338/best_model.pkl
2025-08-07 14:45:32,533 - INFO - 💾 Results saved to: readability_training_pagewise/experiments/xgboost_efficientnet_20250807_144338/results.json
2025-08-07 14:45:32,533 - INFO - 💾 CV results saved to: readability_training_pagewise/experiments/xgboost_efficientnet_20250807_144338/cv_results.csv
2025-08-07 14:45:32,533 - INFO - 📊 Creating visualization plots...
2025-08-07 14:45:32,535 - INFO -    📈 Creating feature importance plot...
2025-08-07 14:45:34,098 - INFO -    📈 Creating confusion matrix...
2025-08-07 14:45:34,956 - INFO -    📈 Creating ROC curve...
2025-08-07 14:45:35,827 - INFO -    📈 Creating hyperparameter search visualization...
2025-08-07 14:45:35,963 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-08-07 14:45:35,966 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-08-07 14:45:35,992 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-08-07 14:45:35,994 - INFO - Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.
2025-08-07 14:45:37,984 - INFO - ✅ All 4 plots created successfully
2025-08-07 14:45:37,985 - INFO - 📁 Plots saved to: readability_training_pagewise/experiments/xgboost_efficientnet_20250807_144338/plots
